name: Cabal Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1
        with:
          ghc-version: "8.10.3"
          cabal-version: "3.2"

      - name: Cache
        uses: actions/cache@v1
        env:
          cache-name: cache-cabal
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          cabal update
          cabal build --only-dependencies --enable-tests --enable-benchmarks --enable-doc all
      - name: Build
        run: cabal build --enable-tests --enable-benchmarks --enable-doc all
      - name: Run tests
        run: cabal test --enable-doc all
      - name: Build haddock documentation
        run: cabal haddock --haddock-for-hackage --enable-doc

      - name: Publish candidate to Hackage
        if: ${{ github.event_name == 'push' }}
        env:
          API_TOKEN_HACKAGE: ${{ secrets.API_TOKEN_HACKAGE }}
        run: |
          PACKAGE=$(grep '^name:' *.cabal | awk '{print $2}')
          VERSION=$(grep '^version:' *.cabal | awk '{print $2}')
          cabal sdist
          curl --header "Authorization: X-ApiKey $API_TOKEN_HACKAGE" \
            -F "package=@dist-newstyle/sdist/$PACKAGE-$VERSION.tar.gz" \
            "https://hackage.haskell.org/packages/candidates"
          curl --header "Authorization: X-ApiKey $API_TOKEN_HACKAGE" \
            -X PUT \
            -H "Content-Type: application/x-tar" \
            -H "Content-Encoding: gzip" \
            --data-binary "@dist-newstyle/$PACKAGE-$VERSION-docs.tar.gz" \
            "https://hackage.haskell.org/package/$PACKAGE-$VERSION/candidate/docs"
