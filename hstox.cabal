name:                 hstox
synopsis:             A Tox protocol implementation in Haskell
version:              0.0.1
cabal-version:        >= 1.10
license:              AGPL-3
license-file:         LICENSE.md
build-type:           Simple
author:               iphy
maintainer:           iphy
copyright:            Â© 2016 iphy
homepage:             http://hstox.github.io
category:             Network
description:          A Tox protocol implementation in Haskell

source-repository head
  type: git
  location: https://github.com/iphydf/hstox

flag asan
  description: Build C code with -fsanitize=address
  default: False

flag library-only
  description: Only build libraries, no programs.
  default: False

library
  default-language: Haskell2010
  hs-source-dirs:
      src/msgpack
    , src/tox
  ghc-options:
      -Wall
      -Werror
  build-depends:
      base < 5
    , QuickCheck
    , base16-bytestring
    , binary
    , binary-bits
    , binary-conduit
    , bytestring
    , conduit
    , conduit-extra
    , containers
    , data-binary-ieee754
    , deepseq
    , exceptions
    , hashable
    , integer-gmp
    , iproute
    , monad-control
    , mtl
    , network
    , saltine
    , scientific
    , split
    , tagged
    , text
    , transformers
    , unordered-containers
    , vector
  other-modules:
      Data.MessagePack.Assoc
      Data.MessagePack.Class
      Data.MessagePack.Generic
      Data.MessagePack.Get
      Data.MessagePack.Object
      Data.MessagePack.Put
  exposed-modules:
      Data.MessagePack
      Network.MessagePack.Client
      Network.MessagePack.Server
      Network.Tox
      Network.Tox.Binary
      Network.Tox.Crypto
      Network.Tox.Crypto.Box
      Network.Tox.Crypto.CombinedKey
      Network.Tox.Crypto.Key
      Network.Tox.Crypto.KeyPair
      Network.Tox.Crypto.Nonce
      Network.Tox.Crypto.Text
      Network.Tox.DHT
      Network.Tox.DHT.DhtPacket
      Network.Tox.DHT.DhtState
      Network.Tox.DHT.Distance
      Network.Tox.DHT.KBuckets
      Network.Tox.DHT.NodesRequest
      Network.Tox.DHT.NodesResponse
      Network.Tox.DHT.PingPacket
      Network.Tox.DHT.RpcPacket
      Network.Tox.Encoding
      Network.Tox.NodeInfo
      Network.Tox.NodeInfo.HostAddress
      Network.Tox.NodeInfo.NodeInfo
      Network.Tox.NodeInfo.PortNumber
      Network.Tox.NodeInfo.SocketAddress
      Network.Tox.NodeInfo.TransportProtocol
      Network.Tox.Protocol
      Network.Tox.Protocol.Packet
      Network.Tox.Protocol.PacketKind
      Network.Tox.RPC

executable testsuite
  default-language: Haskell2010
  hs-source-dirs:
      src/testsuite
  ghc-options:
      -Wall
      -Werror
  build-depends:
      base < 5
    , QuickCheck
    , async
    , base16-bytestring
    , binary
    , binary-bits
    , bytestring
    , containers
    , hashable
    , hspec
    , hstox
    , mtl
    , network
    , saltine
    , text
    , transformers
    , unordered-containers
  main-is:
      TestSuite.hs
  if flag(library-only)
    buildable: False

executable test-hstox
  default-language: Haskell2010
  hs-source-dirs:
      test/hstox
  ghc-options:
      -Wall
      -Werror
  build-depends:
      base < 5
    , hstox
  main-is:
      TestServer.lhs
  if flag(library-only)
    buildable: False

executable test-toxcore
  default-language: Haskell2010
  main-is:          TestToxcore.hs
  hs-source-dirs:   test/toxcore
  build-depends:    base < 5
  extra-libraries:  msgpackc, sodium, toxcore
  cc-options:       -std=c99 -Wall -Werror
  include-dirs:
      test/toxcore/toxcore/toxcore
  c-sources:
      test/toxcore/binary_decode.c
      test/toxcore/binary_encode.c
      test/toxcore/driver.c
      test/toxcore/methods.c
      test/toxcore/util.c
  if flag(asan)
    cc-options:     -fsanitize=address
    ld-options:     -fsanitize=address
  if flag(library-only)
    buildable: False
