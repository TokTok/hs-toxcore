load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project()

haskell_library(
    name = "hs-toxcore",
    srcs = glob(["src/**/*.*hs"]),
    compiler_flags = [
        "-j4",
        "-Wno-unused-imports",
    ],
    src_strip_prefix = "src",
    version = "0.2.11",
    visibility = ["//visibility:public"],
    deps = [
        "//hs-msgpack-binary",
        hazel_library("MonadRandom"),
        hazel_library("QuickCheck"),
        hazel_library("base"),
        hazel_library("base16-bytestring"),
        hazel_library("binary"),
        hazel_library("bytestring"),
        hazel_library("clock"),
        hazel_library("containers"),
        hazel_library("entropy"),
        hazel_library("integer-gmp"),
        hazel_library("iproute"),
        hazel_library("lens-family"),
        hazel_library("mtl"),
        hazel_library("network"),
        hazel_library("random"),
        hazel_library("saltine"),
        hazel_library("transformers"),
    ],
)

hspec_test(
    name = "testsuite",
    size = "small",
    compiler_flags = [
        "-j4",
        "-Wno-unused-imports",
    ],
    deps = [
        ":hs-toxcore",
        "//hs-msgpack-binary",
        "//hs-msgpack-types",
        hazel_library("QuickCheck"),
        hazel_library("async"),
        hazel_library("base"),
        hazel_library("binary"),
        hazel_library("bytestring"),
        hazel_library("containers"),
        hazel_library("hspec"),
        hazel_library("mtl"),
        hazel_library("saltine"),
        hazel_library("text"),
    ],
)
